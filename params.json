{"name":"Python scripts","tagline":"","body":"python_scripts\r\n==============\r\nSelection of Python Scripts written by myself.\r\n\r\nThis can be used as learning material of example of python coding.\r\n\r\nThe below is one of the examples use of threading.\r\n\r\nimport requests\r\nimport csv\r\nimport sys\r\nimport subprocess\r\nfrom threading import Thread\r\nfrom time import sleep\r\n\r\nalive_ips = []\r\ndead_ips = []\r\nthreads=[]\r\n\r\nsummary = \"/stats/summary/summary.html\"\r\nconfig_params = \"/cgi/execAdvCom.bin?Command=85&PrintMsg=Config%20Params\"\r\ntx_monitor = \"/cgi/execAdvCom.bin?Command=194&PrintMsg=TxMonitor\"\r\n\r\ndef check_if_alive(ip):\r\n    try:\r\n        r = requests.get('http://'+ip+'',timeout=3)\r\n        #alive_ips.append(ip)\r\n        #print(r)\r\n        #print(\"Good ip\"+ip+\"\")\r\n        alive_ips.append(ip)\r\n        \r\n    except requests.exceptions.Timeout:\r\n        #print(requests.exceptions.Timeout)\r\n        #print(\"Error with\"+ip+\"\")\r\n        dead_ips.append(ip)\r\n        #dead_ips.append(ip)\r\n        #print(dead_ips)\r\n        #return dead_ips\r\n       #print(ip)\r\n        #return ip\r\n    \r\n\r\ndef get_logs_for(filename,ip,logs_type):\r\n    path=\"logs_download/\"\r\n    r = requests.get('http://'+ip+''+logs_type+'', auth=('avanti', 'avanti'),timeout=3)\r\n    with open(path+filename+\".html\", 'wb') as fd:\r\n        fd.write(r.content)\r\n    r = \"\"\r\n    sleep(2)\r\n\r\n\r\n\r\n\r\nwith open(\"device_list.csv\",'r') as f:\r\n    reader=csv.reader(f)\r\n    for row in reader:\r\n        device = row[0]\r\n        ip = row[3]\r\n        #if check_if_alive(ip) != False:\r\n        t1 = Thread(target=get_logs_for, args=(device+\"_summary\",ip,summary,))\r\n        threads.append(t1)\r\n        t2 = Thread(target=get_logs_for, args=(device+\"_config_params\",ip,config_params,))\r\n        threads.append(t2)\r\n        t3 = Thread(target=get_logs_for, args=(device+\"_tx_monitor\",ip,tx_monitor,))\r\n        threads.append(t3)\r\n        #else:\r\n        # print(\"Connection timed out on ip: \"+ip+\"\")\r\n\r\nfor i in range(len(threads)):\r\n    try:\r\n        threads[i].start()\r\n    except requests.exceptions.Timeout:\r\n        print(\"Error with\"+threads[i]+\"\")\r\n    \r\n\"\"\"\r\nchecks = []\r\n\r\nwith open(\"device_list.csv\",'r') as f:\r\nreader=csv.reader(f)\r\nfor row in reader:\r\ndevice = row[0]\r\nip = row[3]\r\n# print(ip)\r\nt4 = Thread(target=check_if_alive, args=(ip,))\r\nchecks.append(t4)\r\nfor i in range(len(checks)):\r\nsleep(0.5)\r\nchecks[i].start()\r\n\r\n#print(alive_ips)\r\n\r\nfor i in range(len(alive_ips)):\r\ntry:\r\nprint(alive_ips[i])\r\nt1 = Thread(target=get_logs_for, args=(device+\"_summary\",str(alive_ips[i]),summary,))\r\nthreads.append(t1)\r\nt2 = Thread(target=get_logs_for, args=(device+\"_config_params\",str(alive_ips[i]),config_params,))\r\nthreads.append(t2)\r\nt3 = Thread(target=get_logs_for, args=(device+\"_tx_monitor\",str(alive_ips[i]),tx_monitor,))\r\nthreads.append(t3)\r\nexcept:\r\nprint(\"Error with\"+alive_ips[i]+\"\")\r\n\r\nfor i in range(len(threads)):\r\nthreads[i].start()\r\nsleep(2)\r\n#print(check_if_alive(\"10.32.73.6\"))\r\n#print(check_if_alive(\"10.32.65.202\"))\r\n\r\n\"\"\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}